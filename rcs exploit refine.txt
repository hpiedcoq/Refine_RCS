[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression grel:value.replace(/(\\.|\\,|\\ )/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 1",
    "expression": "grel:value.replace(/(\\.|\\,|\\ )/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 1",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression grel:value.slice(4,15)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "[A-Z]",
          "name": "Column 1",
          "type": "text",
          "columnName": "Column 1"
        }
      ]
    },
    "columnName": "Column 1",
    "expression": "grel:value.slice(4,15)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression grel:value.slice(0,9)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "\\d{14}",
          "name": "Column 1",
          "type": "text",
          "columnName": "Column 1"
        }
      ]
    },
    "columnName": "Column 1",
    "expression": "grel:value.slice(0,9)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 1 to RCS",
    "oldColumnName": "Column 1",
    "newColumnName": "RCS"
  },
  {
    "op": "core/column-addition",
    "description": "Create column URL at index 1 based on column RCS using expression grel:\"http://www.societe.com/cgi-bin/search?champs=\"+value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "URL",
    "columnInsertIndex": 1,
    "baseColumnName": "RCS",
    "expression": "grel:\"http://www.societe.com/cgi-bin/search?champs=\"+value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column Web Réponse at index 2 by fetching URLs based on column URL using expression grel:escape(value,'html')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Web Réponse",
    "columnInsertIndex": 2,
    "baseColumnName": "URL",
    "urlExpression": "grel:escape(value,'html')",
    "onError": "set-to-blank",
    "delay": 5000
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Web Réponse using expression grel:value.reinterpret('ISO-8859-1')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Web Réponse",
    "expression": "grel:value.reinterpret('ISO-8859-1')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Siret at index 3 based on column Web Réponse using expression grel:value.partition(\"SIRET (siege)</td>\")[2].partition(\"<td>\")[2].partition(\"</td>\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Siret",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"SIRET (siege)</td>\")[2].partition(\"<td>\")[2].partition(\"</td>\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Adresse at index 3 based on column Web Réponse using expression grel:value.partition(\"identitetext\\\"\")[2].partition(\"<\\/div>\")[0].replace(\"</p>\",\";\").replace(\"<p>\",\"\").replace(\">\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Adresse",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"identitetext\\\"\")[2].partition(\"<\\/div>\")[0].replace(\"</p>\",\";\").replace(\"<p>\",\"\").replace(\">\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Capital social at index 3 based on column Web Réponse using expression grel:value.partition(\"Capital social\")[2].partition(\"numdisplay\")[2].partition(\"<\")[0].replace(/(\\>|\\\")/,\"\").partition(\" \")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Capital social",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"Capital social\")[2].partition(\"numdisplay\")[2].partition(\"<\")[0].replace(/(\\>|\\\")/,\"\").partition(\" \")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Chiffre d'affaire at index 3 based on column Web Réponse using expression grel:value.partition(\"Chiffre d'affaires \")[2].partition(/\\</)[0]+\"||\"+value.partition(\"Chiffre d'affaires \")[2].partition(/numdisplay/)[2].partition(/\\ EU/)[0].replace(/(\\\"|\\>)/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Chiffre d'affaire",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"Chiffre d'affaires \")[2].partition(/\\</)[0]+\"||\"+value.partition(\"Chiffre d'affaires \")[2].partition(/numdisplay/)[2].partition(/\\ EU/)[0].replace(/(\\\"|\\>)/,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Infos Complètes at index 3 based on column Web Réponse using expression grel:value.partition(\"rensjurcomplete\")[2].partition(\"</table>\")[0].partition(\"<td>\")[2].replace(\"\\n\",\"\").replace(/(\\<\\/td\\>)/,\";\").replace(/((\\<td\\>)|(\\<tr\\>))/,\"\").replace(/(\\<\\/tr\\>)/,\"|\").replace(/(<td class=\"numdisplay\">)/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Infos Complètes",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"rensjurcomplete\")[2].partition(\"</table>\")[0].partition(\"<td>\")[2].replace(\"\\n\",\"\").replace(/(\\<\\/td\\>)/,\";\").replace(/((\\<td\\>)|(\\<tr\\>))/,\"\").replace(/(\\<\\/tr\\>)/,\"|\").replace(/(<td class=\"numdisplay\">)/,\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Nom at index 3 based on column Web Réponse using expression grel:value.partition(/(<title>)/)[2].partition(\"Chiffre\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Nom",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(/(<title>)/)[2].partition(\"Chiffre\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Dirigeants at index 3 based on column Web Réponse using expression grel:value.partition(/(Mandataires de type :)/)[2].partition(/(Voir la cartographie)/)[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Dirigeants",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(/(Mandataires de type :)/)[2].partition(/(Voir la cartographie)/)[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Infos Complètes using expression grel:value.replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Infos Complètes",
    "expression": "grel:value.replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeants using expression grel:value.replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Dirigeants",
    "expression": "grel:value.replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeants using expression value.unescape('html')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Dirigeants",
    "expression": "value.unescape('html')",
    "onError": "keep-original",
    "repeat": true,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeants using expression grel:value.replaceChars(\" \", \" \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Dirigeants",
    "expression": "grel:value.replaceChars(\" \", \" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Dirigeant actuel at index 4 based on column Dirigeants using expression grel:value.partition(\"b>\")[2].partition(\"<\")[0]+\" :\"+value.partition(/(lien\">)/)[2].partition(\"<\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Dirigeant actuel",
    "columnInsertIndex": 4,
    "baseColumnName": "Dirigeants",
    "expression": "grel:value.partition(\"b>\")[2].partition(\"<\")[0]+\" :\"+value.partition(/(lien\">)/)[2].partition(\"<\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Web Réponse using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "columnName": "Web Réponse",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Web Réponse using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "columnName": "Web Réponse",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column dirigeant lien at index 3 based on column Web Réponse using expression grel:\"http://dirigeant.societe.com/dirigeant/\"+value.partition(\"href=\\\"http://dirigeant.societe.com/dirigeant/\")[2].partition(\"\\\"\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "newColumnName": "dirigeant lien",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:\"http://dirigeant.societe.com/dirigeant/\"+value.partition(\"href=\\\"http://dirigeant.societe.com/dirigeant/\")[2].partition(\"\\\"\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column Résultat gérant at index 4 by fetching URLs based on column dirigeant lien using expression grel:value",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "newColumnName": "Résultat gérant",
    "columnInsertIndex": 4,
    "baseColumnName": "dirigeant lien",
    "urlExpression": "grel:value",
    "onError": "set-to-blank",
    "delay": 3000
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Résultat gérant using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "columnName": "Résultat gérant",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Résultat gérant using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "columnName": "Résultat gérant",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Résultat gérant using expression grel:value.reinterpret('ISO-8859-1').replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\").replace(\"&apos;\",\"'\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "columnName": "Résultat gérant",
    "expression": "grel:value.reinterpret('ISO-8859-1').replace(\"Nï¿½\",\"N°\").replace(/(Catï¿½gorie)/,\"Catégorie\").replace(/(Activitï¿½)/,\"Activité\").replace(/(spï¿½cialisï¿½)/,\"spécialisé\").replace(/(siï¿½ge)/,\"siège\").replace(/(crï¿½ation)/,\"création\").replace(/(ï¿½)/,\"é\").replace(/(\\u000A)/,\"\").replace(\"&apos;\",\"'\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Année de naissance du gérant at index 5 based on column Résultat gérant using expression grel:value.partition(\"identitetextdir\")[2].partition(\"p>\")[2].replace(\"°\",\"é\").partition(\"<\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "newColumnName": "Année de naissance du gérant",
    "columnInsertIndex": 5,
    "baseColumnName": "Résultat gérant",
    "expression": "grel:value.partition(\"identitetextdir\")[2].partition(\"p>\")[2].replace(\"°\",\"é\").partition(\"<\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Résumé dirigeant at index 5 based on column Résultat gérant using expression grel:value.partition(\"synthese\\\">\")[2].partition(\"2\")[2].partition(\"</p\")[0].replace(\"\\\">\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "text",
          "caseSensitive": false,
          "query": "",
          "name": "Web Réponse",
          "type": "text",
          "columnName": "Web Réponse"
        }
      ]
    },
    "newColumnName": "Résumé dirigeant",
    "columnInsertIndex": 5,
    "baseColumnName": "Résultat gérant",
    "expression": "grel:value.partition(\"synthese\\\">\")[2].partition(\"2\")[2].partition(\"</p\")[0].replace(\"\\\">\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Etat société at index 3 based on column Web Réponse using expression grel:value.partition(\"Statut</td>\")[2].partition(\">\")[2].partition(\"<\")[0].replace(\"ï¿½\",\"é\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Etat société",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"Statut</td>\")[2].partition(\">\")[2].partition(\"<\")[0].replace(\"ï¿½\",\"é\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Forme juridique at index 3 based on column Web Réponse using expression grel:value.partition(\"Forme juridique\")[2].partition(/(<td>)/)[2].partition(/(<\\/td>)/)[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Forme juridique",
    "columnInsertIndex": 3,
    "baseColumnName": "Web Réponse",
    "expression": "grel:value.partition(\"Forme juridique\")[2].partition(/(<td>)/)[2].partition(/(<\\/td>)/)[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Chiffre d'affaire using expression null",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "grel:value.contains(\",\")",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Chiffre d'affaire",
          "omitBlank": false,
          "type": "list",
          "columnName": "Chiffre d'affaire"
        }
      ]
    },
    "columnName": "Chiffre d'affaire",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Adresse using expression grel:if(value.contains(\"class\"), value.partition(\";\")[2], value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Adresse",
    "expression": "grel:if(value.contains(\"class\"), value.partition(\";\")[2], value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Adresse using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Adresse",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Adresse using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Adresse",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeant actuel using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Dirigeant actuel",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeant actuel using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Dirigeant actuel",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Infos Complètes using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Infos Complètes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Infos Complètes using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Infos Complètes",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Nom using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Nom",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Nom using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Nom",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column url geocode at index 3 based on column Adresse using expression grel:\"https://maps.googleapis.com/maps/api/geocode/json?address=\"+escape(value,'url')+\"&key=INSERT_YOUR_API_KEY_HERE\"",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "url geocode",
    "columnInsertIndex": 3,
    "baseColumnName": "Adresse",
    "expression": "grel:\"https://maps.googleapis.com/maps/api/geocode/json?address=\"+escape(value,'url')+\"&key=INSERT_YOUR_API_KEY_HERE\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column json at index 4 by fetching URLs based on column url geocode using expression grel:value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "json",
    "columnInsertIndex": 4,
    "baseColumnName": "url geocode",
    "urlExpression": "grel:value",
    "onError": "set-to-blank",
    "delay": 10000
  },
  {
    "op": "core/column-addition",
    "description": "Create column geo tag at index 5 based on column json using expression grel:with(value.parseJson().results[0].geometry.location, pair, pair.lat +\", \" + pair.lng)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "geo tag",
    "columnInsertIndex": 5,
    "baseColumnName": "json",
    "expression": "grel:with(value.parseJson().results[0].geometry.location, pair, pair.lat +\", \" + pair.lng)",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column url geocode",
    "columnName": "url geocode"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column json",
    "columnName": "json"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Dirigeant actuel using expression null",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "mode": "regex",
          "caseSensitive": false,
          "query": "^:",
          "name": "Dirigeant actuel",
          "type": "text",
          "columnName": "Dirigeant actuel"
        }
      ]
    },
    "columnName": "Dirigeant actuel",
    "expression": "null",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Capital social using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Capital social",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Capital social using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Capital social",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Capital social using expression grel:value.partition(\",\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Capital social",
    "expression": "grel:value.partition(\",\")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column RCS complet at index 8 based on column Infos Complètes using expression grel:value.partition(\"; \")[2].partition(\"; \")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "RCS complet",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"; \")[2].partition(\"; \")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Catégorie at index 8 based on column Infos Complètes using expression grel:value.partition(\"Catégorie;\")[2].partition(\"; \")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Catégorie",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"Catégorie;\")[2].partition(\"; \")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Code APE at index 8 based on column Infos Complètes using expression grel:value.partition(\"entreprise; \")[2].partition(\"; \")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Code APE",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"entreprise; \")[2].partition(\"; \")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Date d'immatriculation at index 8 based on column Infos Complètes using expression grel:value.partition(\"Date immatriculation RCS; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Date d'immatriculation",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"Date immatriculation RCS; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Date de création d'entreprise at index 8 based on column Infos Complètes using expression grel:value.partition(\"Date création entreprise; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Date de création d'entreprise",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"Date création entreprise; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Activité du siège at index 8 based on column Infos Complètes using expression grel:value.partition(\"Activité (Code NAF ou APE); \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Activité du siège",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\"Activité (Code NAF ou APE); \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Date création siège actuel at index 8 based on column Infos Complètes using expression grel:value.partition(\" Date création siège actuel; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Date création siège actuel",
    "columnInsertIndex": 8,
    "baseColumnName": "Infos Complètes",
    "expression": "grel:value.partition(\" Date création siège actuel; \")[2].partition(\"; \")[0].replace(\"-\",\"/\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Infos Complètes",
    "columnName": "Infos Complètes"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RCS complet using expression grel:if(value.contains(\"MADAME\"),null,value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RCS complet",
    "expression": "grel:if(value.contains(\"MADAME\"),null,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RCS complet using expression grel:if(value.contains(\"MONSIEUR\"),null,value)",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RCS complet",
    "expression": "grel:if(value.contains(\"MONSIEUR\"),null,value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Forme juridique using expression grel:value.replace(\"ï¿½\",\"é\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Forme juridique",
    "expression": "grel:value.replace(\"ï¿½\",\"é\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "RCS",
      "RCS complet",
      "Nom",
      "Forme juridique",
      "Etat société",
      "Dirigeant actuel",
      "Année de naissance du gérant",
      "Résumé dirigeant",
      "Date création siège actuel",
      "Activité du siège",
      "Adresse",
      "geo tag",
      "Date de création d'entreprise",
      "Date d'immatriculation",
      "Code APE",
      "Catégorie",
      "Dirigeants",
      "Chiffre d'affaire",
      "Capital social",
      "Siret",
      "Web Réponse",
      "URL",
      "Résultat gérant",
      "dirigeant lien"
    ]
  },
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "RCS",
      "RCS complet",
      "Nom",
      "Forme juridique",
      "Etat société",
      "Dirigeant actuel",
      "Année de naissance du gérant",
      "Résumé dirigeant",
      "Date création siège actuel",
      "Activité du siège",
      "Adresse",
      "geo tag",
      "Date de création d'entreprise",
      "Date d'immatriculation",
      "Code APE",
      "Catégorie",
      "Chiffre d'affaire",
      "Capital social",
      "Siret"
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RCS using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RCS",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Identifiant TVA at index 1 based on column RCS using expression grel:\"FR\"+mod((mod(value,97))*3+12,97)+value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Identifiant TVA",
    "columnInsertIndex": 1,
    "baseColumnName": "RCS",
    "expression": "grel:\"FR\"+mod((mod(value,97))*3+12,97)+value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Identifiant TVA to ID TVA",
    "oldColumnName": "Identifiant TVA",
    "newColumnName": "ID TVA"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Requete VIES at index 1 based on column ID TVA using expression grel:\"http://ec.europa.eu/taxation_customs/vies/viesquer.do?ms=\"+value.partition(/([A-Z]{0,3})/)[1]+\"&iso=\"+value.partition(/([A-Z]{0,3})/)[1]+\"&vat=\"+value.partition(/([A-Z]{0,3})/)[2]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Requete VIES",
    "columnInsertIndex": 1,
    "baseColumnName": "ID TVA",
    "expression": "grel:\"http://ec.europa.eu/taxation_customs/vies/viesquer.do?ms=\"+value.partition(/([A-Z]{0,3})/)[1]+\"&iso=\"+value.partition(/([A-Z]{0,3})/)[1]+\"&vat=\"+value.partition(/([A-Z]{0,3})/)[2]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column VIES at index 2 by fetching URLs based on column Requete VIES using expression grel:value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "VIES",
    "columnInsertIndex": 2,
    "baseColumnName": "Requete VIES",
    "urlExpression": "grel:value",
    "onError": "set-to-blank",
    "delay": 1000
  },
  {
    "op": "core/column-addition",
    "description": "Create column Validité VIES at index 3 based on column VIES using expression grel:if(value.contains(\"invalidStyle\"),\"Invalide\",\"Valide\")value",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "Validité VIES",
    "columnInsertIndex": 3,
    "baseColumnName": "VIES",
    "expression": "grel:if(value.contains(\"invalidStyle\"),\"Invalide\",\"Valide\")value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Date Vérif VIES at index 3 based on column VIES using expression grel:value.partition(\"Date when request received\")[2].partition(\"<td>\")[2].partition(\"<\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Valide",
                "l": "Valide"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Validité VIES",
          "omitBlank": false,
          "type": "list",
          "columnName": "Validité VIES"
        }
      ]
    },
    "newColumnName": "Date Vérif VIES",
    "columnInsertIndex": 3,
    "baseColumnName": "VIES",
    "expression": "grel:value.partition(\"Date when request received\")[2].partition(\"<td>\")[2].partition(\"<\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Société at index 3 based on column VIES using expression grel:value.partition(\"Name\")[2].partition(\"<td>\")[2].partition(\"<\")[0]+\" - \"+value.partition(\"Address\")[2].partition(\"<td>\")[2].partition(\"<tr>\")[0].replace(\"<br \\/>\",\" - \").partition(\"<\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "value",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "Valide",
                "l": "Valide"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Validité VIES",
          "omitBlank": false,
          "type": "list",
          "columnName": "Validité VIES"
        }
      ]
    },
    "newColumnName": "Société",
    "columnInsertIndex": 3,
    "baseColumnName": "VIES",
    "expression": "grel:value.partition(\"Name\")[2].partition(\"<td>\")[2].partition(\"<\")[0]+\" - \"+value.partition(\"Address\")[2].partition(\"<td>\")[2].partition(\"<tr>\")[0].replace(\"<br \\/>\",\" - \").partition(\"<\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Requete VIES",
    "columnName": "Requete VIES"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column VIES",
    "columnName": "VIES"
  }
]